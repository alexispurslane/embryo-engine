<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="902" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="885.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="885.00"> </text><svg id="frames" x="10" width="1180" total_samples="94"><g><title>dconf_worker (2 samples, 2.13%)</title><rect x="0.0000%" y="837" width="2.1277%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="847.50">d..</text></g><g><title>clone3 (2 samples, 2.13%)</title><rect x="0.0000%" y="821" width="2.1277%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="831.50">c..</text></g><g><title>start_thread (2 samples, 2.13%)</title><rect x="0.0000%" y="805" width="2.1277%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="815.50">s..</text></g><g><title>[libglib-2.0.so.0.8000.0] (2 samples, 2.13%)</title><rect x="0.0000%" y="789" width="2.1277%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="799.50">[..</text></g><g><title>[libdconfsettings.so] (2 samples, 2.13%)</title><rect x="0.0000%" y="773" width="2.1277%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2"/><text x="0.2500%" y="783.50">[..</text></g><g><title>g_main_context_iteration (2 samples, 2.13%)</title><rect x="0.0000%" y="757" width="2.1277%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="2"/><text x="0.2500%" y="767.50">g..</text></g><g><title>[libglib-2.0.so.0.8000.0] (2 samples, 2.13%)</title><rect x="0.0000%" y="741" width="2.1277%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="2"/><text x="0.2500%" y="751.50">[..</text></g><g><title>[libglib-2.0.so.0.8000.0] (2 samples, 2.13%)</title><rect x="0.0000%" y="725" width="2.1277%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="2"/><text x="0.2500%" y="735.50">[..</text></g><g><title>[libglib-2.0.so.0.8000.0] (2 samples, 2.13%)</title><rect x="0.0000%" y="709" width="2.1277%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="2"/><text x="0.2500%" y="719.50">[..</text></g><g><title>[libdconfsettings.so] (1 samples, 1.06%)</title><rect x="1.0638%" y="693" width="1.0638%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="1.3138%" y="703.50"></text></g><g><title>g_dbus_connection_call (1 samples, 1.06%)</title><rect x="1.0638%" y="677" width="1.0638%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="1.3138%" y="687.50"></text></g><g><title>[libgio-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="1.0638%" y="661" width="1.0638%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="1.3138%" y="671.50"></text></g><g><title>g_dbus_connection_send_message_with_reply (1 samples, 1.06%)</title><rect x="1.0638%" y="645" width="1.0638%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="1.3138%" y="655.50"></text></g><g><title>[libgio-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="1.0638%" y="629" width="1.0638%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="1.3138%" y="639.50"></text></g><g><title>[libgio-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="1.0638%" y="613" width="1.0638%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="1.3138%" y="623.50"></text></g><g><title>g_dbus_message_to_blob (1 samples, 1.06%)</title><rect x="1.0638%" y="597" width="1.0638%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="1.3138%" y="607.50"></text></g><g><title>[libgio-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="1.0638%" y="581" width="1.0638%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="1"/><text x="1.3138%" y="591.50"></text></g><g><title>[libgio-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="1.0638%" y="565" width="1.0638%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="1"/><text x="1.3138%" y="575.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 1.06%)</title><rect x="1.0638%" y="549" width="1.0638%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="1"/><text x="1.3138%" y="559.50"></text></g><g><title>xmlParseDocTypeDecl (1 samples, 1.06%)</title><rect x="2.1277%" y="773" width="1.0638%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="1"/><text x="2.3777%" y="783.50"></text></g><g><title>xmlParseName (1 samples, 1.06%)</title><rect x="2.1277%" y="757" width="1.0638%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="1"/><text x="2.3777%" y="767.50"></text></g><g><title>[libfontconfig.so.1.12.1] (2 samples, 2.13%)</title><rect x="2.1277%" y="821" width="2.1277%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="2"/><text x="2.3777%" y="831.50">[..</text></g><g><title>[libfontconfig.so.1.12.1] (2 samples, 2.13%)</title><rect x="2.1277%" y="805" width="2.1277%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="2"/><text x="2.3777%" y="815.50">[..</text></g><g><title>xmlParseChunk (2 samples, 2.13%)</title><rect x="2.1277%" y="789" width="2.1277%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="2"/><text x="2.3777%" y="799.50">x..</text></g><g><title>xmlParseStartTag (1 samples, 1.06%)</title><rect x="3.1915%" y="773" width="1.0638%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="1"/><text x="3.4415%" y="783.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 1.06%)</title><rect x="3.1915%" y="757" width="1.0638%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="1"/><text x="3.4415%" y="767.50"></text></g><g><title>_int_free (1 samples, 1.06%)</title><rect x="3.1915%" y="741" width="1.0638%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="1"/><text x="3.4415%" y="751.50"></text></g><g><title>[unknown] (15 samples, 15.96%)</title><rect x="4.2553%" y="821" width="15.9574%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="15"/><text x="4.5053%" y="831.50">[unknown]</text></g><g><title>_dl_start_user (2 samples, 2.13%)</title><rect x="20.2128%" y="821" width="2.1277%" height="15" fill="rgb(214,148,48)" fg:x="19" fg:w="2"/><text x="20.4628%" y="831.50">_..</text></g><g><title>_dl_init (2 samples, 2.13%)</title><rect x="20.2128%" y="805" width="2.1277%" height="15" fill="rgb(232,36,49)" fg:x="19" fg:w="2"/><text x="20.4628%" y="815.50">_..</text></g><g><title>call_init (2 samples, 2.13%)</title><rect x="20.2128%" y="789" width="2.1277%" height="15" fill="rgb(209,103,24)" fg:x="19" fg:w="2"/><text x="20.4628%" y="799.50">c..</text></g><g><title>[libhwy.so.1.1.0] (2 samples, 2.13%)</title><rect x="20.2128%" y="773" width="2.1277%" height="15" fill="rgb(229,88,8)" fg:x="19" fg:w="2"/><text x="20.4628%" y="783.50">[..</text></g><g><title>hwy::platform::TimerResolution (2 samples, 2.13%)</title><rect x="20.2128%" y="757" width="2.1277%" height="15" fill="rgb(213,181,19)" fg:x="19" fg:w="2"/><text x="20.4628%" y="767.50">h..</text></g><g><title>dlerror@@GLIBC_2.34 (1 samples, 1.06%)</title><rect x="23.4043%" y="437" width="1.0638%" height="15" fill="rgb(254,191,54)" fg:x="22" fg:w="1"/><text x="23.6543%" y="447.50"></text></g><g><title>__asprintf (1 samples, 1.06%)</title><rect x="23.4043%" y="421" width="1.0638%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="1"/><text x="23.6543%" y="431.50"></text></g><g><title>__vasprintf_internal (1 samples, 1.06%)</title><rect x="23.4043%" y="405" width="1.0638%" height="15" fill="rgb(233,36,39)" fg:x="22" fg:w="1"/><text x="23.6543%" y="415.50"></text></g><g><title>__printf_buffer (1 samples, 1.06%)</title><rect x="23.4043%" y="389" width="1.0638%" height="15" fill="rgb(226,3,54)" fg:x="22" fg:w="1"/><text x="23.6543%" y="399.50"></text></g><g><title>[libdbus-1.so.3.32.4] (1 samples, 1.06%)</title><rect x="26.5957%" y="309" width="1.0638%" height="15" fill="rgb(245,192,40)" fg:x="25" fg:w="1"/><text x="26.8457%" y="319.50"></text></g><g><title>[libdbus-1.so.3.32.4] (1 samples, 1.06%)</title><rect x="26.5957%" y="293" width="1.0638%" height="15" fill="rgb(238,167,29)" fg:x="25" fg:w="1"/><text x="26.8457%" y="303.50"></text></g><g><title>_dbus_string_skip_blank (1 samples, 1.06%)</title><rect x="26.5957%" y="277" width="1.0638%" height="15" fill="rgb(232,182,51)" fg:x="25" fg:w="1"/><text x="26.8457%" y="287.50"></text></g><g><title>__errno_location (1 samples, 1.06%)</title><rect x="27.6596%" y="309" width="1.0638%" height="15" fill="rgb(231,60,39)" fg:x="26" fg:w="1"/><text x="27.9096%" y="319.50"></text></g><g><title>__errno_location@plt (1 samples, 1.06%)</title><rect x="28.7234%" y="309" width="1.0638%" height="15" fill="rgb(208,69,12)" fg:x="27" fg:w="1"/><text x="28.9734%" y="319.50"></text></g><g><title>[libdbus-1.so.3.32.4] (6 samples, 6.38%)</title><rect x="24.4681%" y="405" width="6.3830%" height="15" fill="rgb(235,93,37)" fg:x="23" fg:w="6"/><text x="24.7181%" y="415.50">[libdbus..</text></g><g><title>dbus_bus_register (6 samples, 6.38%)</title><rect x="24.4681%" y="389" width="6.3830%" height="15" fill="rgb(213,116,39)" fg:x="23" fg:w="6"/><text x="24.7181%" y="399.50">dbus_bus..</text></g><g><title>dbus_connection_send_with_reply_and_block (6 samples, 6.38%)</title><rect x="24.4681%" y="373" width="6.3830%" height="15" fill="rgb(222,207,29)" fg:x="23" fg:w="6"/><text x="24.7181%" y="383.50">dbus_con..</text></g><g><title>dbus_pending_call_block (6 samples, 6.38%)</title><rect x="24.4681%" y="357" width="6.3830%" height="15" fill="rgb(206,96,30)" fg:x="23" fg:w="6"/><text x="24.7181%" y="367.50">dbus_pen..</text></g><g><title>[libdbus-1.so.3.32.4] (6 samples, 6.38%)</title><rect x="24.4681%" y="341" width="6.3830%" height="15" fill="rgb(218,138,4)" fg:x="23" fg:w="6"/><text x="24.7181%" y="351.50">[libdbus..</text></g><g><title>[libdbus-1.so.3.32.4] (6 samples, 6.38%)</title><rect x="24.4681%" y="325" width="6.3830%" height="15" fill="rgb(250,191,14)" fg:x="23" fg:w="6"/><text x="24.7181%" y="335.50">[libdbus..</text></g><g><title>__poll (1 samples, 1.06%)</title><rect x="29.7872%" y="309" width="1.0638%" height="15" fill="rgb(239,60,40)" fg:x="28" fg:w="1"/><text x="30.0372%" y="319.50"></text></g><g><title>__errno_location (1 samples, 1.06%)</title><rect x="32.9787%" y="325" width="1.0638%" height="15" fill="rgb(206,27,48)" fg:x="31" fg:w="1"/><text x="33.2287%" y="335.50"></text></g><g><title>__errno_location@plt (1 samples, 1.06%)</title><rect x="34.0426%" y="325" width="1.0638%" height="15" fill="rgb(225,35,8)" fg:x="32" fg:w="1"/><text x="34.2926%" y="335.50"></text></g><g><title>__poll (1 samples, 1.06%)</title><rect x="35.1064%" y="325" width="1.0638%" height="15" fill="rgb(250,213,24)" fg:x="33" fg:w="1"/><text x="35.3564%" y="335.50"></text></g><g><title>[libdecor-gtk.so] (6 samples, 6.38%)</title><rect x="30.8511%" y="405" width="6.3830%" height="15" fill="rgb(247,123,22)" fg:x="29" fg:w="6"/><text x="31.1011%" y="415.50">[libdeco..</text></g><g><title>dbus_connection_send_with_reply_and_block (6 samples, 6.38%)</title><rect x="30.8511%" y="389" width="6.3830%" height="15" fill="rgb(231,138,38)" fg:x="29" fg:w="6"/><text x="31.1011%" y="399.50">dbus_con..</text></g><g><title>dbus_pending_call_block (6 samples, 6.38%)</title><rect x="30.8511%" y="373" width="6.3830%" height="15" fill="rgb(231,145,46)" fg:x="29" fg:w="6"/><text x="31.1011%" y="383.50">dbus_pen..</text></g><g><title>[libdbus-1.so.3.32.4] (6 samples, 6.38%)</title><rect x="30.8511%" y="357" width="6.3830%" height="15" fill="rgb(251,118,11)" fg:x="29" fg:w="6"/><text x="31.1011%" y="367.50">[libdbus..</text></g><g><title>[libdbus-1.so.3.32.4] (6 samples, 6.38%)</title><rect x="30.8511%" y="341" width="6.3830%" height="15" fill="rgb(217,147,25)" fg:x="29" fg:w="6"/><text x="31.1011%" y="351.50">[libdbus..</text></g><g><title>_dbus_hash_table_remove_int (1 samples, 1.06%)</title><rect x="36.1702%" y="325" width="1.0638%" height="15" fill="rgb(247,81,37)" fg:x="34" fg:w="1"/><text x="36.4202%" y="335.50"></text></g><g><title>[libdbus-1.so.3.32.4] (1 samples, 1.06%)</title><rect x="36.1702%" y="309" width="1.0638%" height="15" fill="rgb(209,12,38)" fg:x="34" fg:w="1"/><text x="36.4202%" y="319.50"></text></g><g><title>[libdbus-1.so.3.32.4] (1 samples, 1.06%)</title><rect x="36.1702%" y="293" width="1.0638%" height="15" fill="rgb(227,1,9)" fg:x="34" fg:w="1"/><text x="36.4202%" y="303.50"></text></g><g><title>_dbus_connection_ref_unlocked (1 samples, 1.06%)</title><rect x="36.1702%" y="277" width="1.0638%" height="15" fill="rgb(248,47,43)" fg:x="34" fg:w="1"/><text x="36.4202%" y="287.50"></text></g><g><title>[libgdk-3.so.0.2409.32] (2 samples, 2.13%)</title><rect x="37.2340%" y="357" width="2.1277%" height="15" fill="rgb(221,10,30)" fg:x="35" fg:w="2"/><text x="37.4840%" y="367.50">[..</text></g><g><title>gdk_wayland_display_set_cursor_theme (2 samples, 2.13%)</title><rect x="37.2340%" y="341" width="2.1277%" height="15" fill="rgb(210,229,1)" fg:x="35" fg:w="2"/><text x="37.4840%" y="351.50">g..</text></g><g><title>wl_cursor_theme_load (2 samples, 2.13%)</title><rect x="37.2340%" y="325" width="2.1277%" height="15" fill="rgb(222,148,37)" fg:x="35" fg:w="2"/><text x="37.4840%" y="335.50">w..</text></g><g><title>[libwayland-cursor.so.0.22.0] (2 samples, 2.13%)</title><rect x="37.2340%" y="309" width="2.1277%" height="15" fill="rgb(234,67,33)" fg:x="35" fg:w="2"/><text x="37.4840%" y="319.50">[..</text></g><g><title>[libwayland-cursor.so.0.22.0] (1 samples, 1.06%)</title><rect x="38.2979%" y="293" width="1.0638%" height="15" fill="rgb(247,98,35)" fg:x="36" fg:w="1"/><text x="38.5479%" y="303.50"></text></g><g><title>_IO_fread (1 samples, 1.06%)</title><rect x="38.2979%" y="277" width="1.0638%" height="15" fill="rgb(247,138,52)" fg:x="36" fg:w="1"/><text x="38.5479%" y="287.50"></text></g><g><title>g_cond_wait (1 samples, 1.06%)</title><rect x="40.4255%" y="229" width="1.0638%" height="15" fill="rgb(213,79,30)" fg:x="38" fg:w="1"/><text x="40.6755%" y="239.50"></text></g><g><title>g_dbus_proxy_new_for_bus (4 samples, 4.26%)</title><rect x="39.3617%" y="357" width="4.2553%" height="15" fill="rgb(246,177,23)" fg:x="37" fg:w="4"/><text x="39.6117%" y="367.50">g_dbu..</text></g><g><title>g_async_initable_new_async (4 samples, 4.26%)</title><rect x="39.3617%" y="341" width="4.2553%" height="15" fill="rgb(230,62,27)" fg:x="37" fg:w="4"/><text x="39.6117%" y="351.50">g_asy..</text></g><g><title>g_async_initable_new_valist_async (4 samples, 4.26%)</title><rect x="39.3617%" y="325" width="4.2553%" height="15" fill="rgb(216,154,8)" fg:x="37" fg:w="4"/><text x="39.6117%" y="335.50">g_asy..</text></g><g><title>g_bus_get (4 samples, 4.26%)</title><rect x="39.3617%" y="309" width="4.2553%" height="15" fill="rgb(244,35,45)" fg:x="37" fg:w="4"/><text x="39.6117%" y="319.50">g_bus..</text></g><g><title>[libgio-2.0.so.0.8000.0] (4 samples, 4.26%)</title><rect x="39.3617%" y="293" width="4.2553%" height="15" fill="rgb(251,115,12)" fg:x="37" fg:w="4"/><text x="39.6117%" y="303.50">[libg..</text></g><g><title>g_task_run_in_thread (4 samples, 4.26%)</title><rect x="39.3617%" y="277" width="4.2553%" height="15" fill="rgb(240,54,50)" fg:x="37" fg:w="4"/><text x="39.6117%" y="287.50">g_tas..</text></g><g><title>g_thread_pool_push (4 samples, 4.26%)</title><rect x="39.3617%" y="261" width="4.2553%" height="15" fill="rgb(233,84,52)" fg:x="37" fg:w="4"/><text x="39.6117%" y="271.50">g_thr..</text></g><g><title>[libglib-2.0.so.0.8000.0] (4 samples, 4.26%)</title><rect x="39.3617%" y="245" width="4.2553%" height="15" fill="rgb(207,117,47)" fg:x="37" fg:w="4"/><text x="39.6117%" y="255.50">[libg..</text></g><g><title>g_mutex_lock (2 samples, 2.13%)</title><rect x="41.4894%" y="229" width="2.1277%" height="15" fill="rgb(249,43,39)" fg:x="39" fg:w="2"/><text x="41.7394%" y="239.50">g..</text></g><g><title>g_settings_schema_source_get_default (1 samples, 1.06%)</title><rect x="43.6170%" y="357" width="1.0638%" height="15" fill="rgb(209,38,44)" fg:x="41" fg:w="1"/><text x="43.8670%" y="367.50"></text></g><g><title>[libgio-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="43.6170%" y="341" width="1.0638%" height="15" fill="rgb(236,212,23)" fg:x="41" fg:w="1"/><text x="43.8670%" y="351.50"></text></g><g><title>g_settings_schema_source_new_from_directory (1 samples, 1.06%)</title><rect x="43.6170%" y="325" width="1.0638%" height="15" fill="rgb(242,79,21)" fg:x="41" fg:w="1"/><text x="43.8670%" y="335.50"></text></g><g><title>[libgio-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="43.6170%" y="309" width="1.0638%" height="15" fill="rgb(211,96,35)" fg:x="41" fg:w="1"/><text x="43.8670%" y="319.50"></text></g><g><title>g_prefix_error (1 samples, 1.06%)</title><rect x="43.6170%" y="293" width="1.0638%" height="15" fill="rgb(253,215,40)" fg:x="41" fg:w="1"/><text x="43.8670%" y="303.50"></text></g><g><title>g_signal_connect_data (1 samples, 1.06%)</title><rect x="44.6809%" y="357" width="1.0638%" height="15" fill="rgb(211,81,21)" fg:x="42" fg:w="1"/><text x="44.9309%" y="367.50"></text></g><g><title>[libgobject-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="44.6809%" y="341" width="1.0638%" height="15" fill="rgb(208,190,38)" fg:x="42" fg:w="1"/><text x="44.9309%" y="351.50"></text></g><g><title>g_hash_table_lookup (1 samples, 1.06%)</title><rect x="44.6809%" y="325" width="1.0638%" height="15" fill="rgb(235,213,38)" fg:x="42" fg:w="1"/><text x="44.9309%" y="335.50"></text></g><g><title>[libdbus-1.so.3.32.4] (1 samples, 1.06%)</title><rect x="46.8085%" y="53" width="1.0638%" height="15" fill="rgb(237,122,38)" fg:x="44" fg:w="1"/><text x="47.0585%" y="63.50"></text></g><g><title>[libgdk-3.so.0.2409.32] (6 samples, 6.38%)</title><rect x="45.7447%" y="325" width="6.3830%" height="15" fill="rgb(244,218,35)" fg:x="43" fg:w="6"/><text x="45.9947%" y="335.50">[libgdk-..</text></g><g><title>g_object_notify (6 samples, 6.38%)</title><rect x="45.7447%" y="309" width="6.3830%" height="15" fill="rgb(240,68,47)" fg:x="43" fg:w="6"/><text x="45.9947%" y="319.50">g_object..</text></g><g><title>[libgobject-2.0.so.0.8000.0] (6 samples, 6.38%)</title><rect x="45.7447%" y="293" width="6.3830%" height="15" fill="rgb(210,16,53)" fg:x="43" fg:w="6"/><text x="45.9947%" y="303.50">[libgobj..</text></g><g><title>g_signal_emit (6 samples, 6.38%)</title><rect x="45.7447%" y="277" width="6.3830%" height="15" fill="rgb(235,124,12)" fg:x="43" fg:w="6"/><text x="45.9947%" y="287.50">g_signal..</text></g><g><title>g_signal_emit_valist (6 samples, 6.38%)</title><rect x="45.7447%" y="261" width="6.3830%" height="15" fill="rgb(224,169,11)" fg:x="43" fg:w="6"/><text x="45.9947%" y="271.50">g_signal..</text></g><g><title>[libgobject-2.0.so.0.8000.0] (6 samples, 6.38%)</title><rect x="45.7447%" y="245" width="6.3830%" height="15" fill="rgb(250,166,2)" fg:x="43" fg:w="6"/><text x="45.9947%" y="255.50">[libgobj..</text></g><g><title>[libgobject-2.0.so.0.8000.0] (6 samples, 6.38%)</title><rect x="45.7447%" y="229" width="6.3830%" height="15" fill="rgb(242,216,29)" fg:x="43" fg:w="6"/><text x="45.9947%" y="239.50">[libgobj..</text></g><g><title>g_closure_invoke (6 samples, 6.38%)</title><rect x="45.7447%" y="213" width="6.3830%" height="15" fill="rgb(230,116,27)" fg:x="43" fg:w="6"/><text x="45.9947%" y="223.50">g_closur..</text></g><g><title>[libgtk-3.so.0.2409.32] (6 samples, 6.38%)</title><rect x="45.7447%" y="197" width="6.3830%" height="15" fill="rgb(228,99,48)" fg:x="43" fg:w="6"/><text x="45.9947%" y="207.50">[libgtk-..</text></g><g><title>[libgtk-3.so.0.2409.32] (6 samples, 6.38%)</title><rect x="45.7447%" y="181" width="6.3830%" height="15" fill="rgb(253,11,6)" fg:x="43" fg:w="6"/><text x="45.9947%" y="191.50">[libgtk-..</text></g><g><title>atk_bridge_adaptor_init (6 samples, 6.38%)</title><rect x="45.7447%" y="165" width="6.3830%" height="15" fill="rgb(247,143,39)" fg:x="43" fg:w="6"/><text x="45.9947%" y="175.50">atk_brid..</text></g><g><title>atspi_get_a11y_bus (6 samples, 6.38%)</title><rect x="45.7447%" y="149" width="6.3830%" height="15" fill="rgb(236,97,10)" fg:x="43" fg:w="6"/><text x="45.9947%" y="159.50">atspi_ge..</text></g><g><title>dbus_bus_register (6 samples, 6.38%)</title><rect x="45.7447%" y="133" width="6.3830%" height="15" fill="rgb(233,208,19)" fg:x="43" fg:w="6"/><text x="45.9947%" y="143.50">dbus_bus..</text></g><g><title>dbus_connection_send_with_reply_and_block (6 samples, 6.38%)</title><rect x="45.7447%" y="117" width="6.3830%" height="15" fill="rgb(216,164,2)" fg:x="43" fg:w="6"/><text x="45.9947%" y="127.50">dbus_con..</text></g><g><title>dbus_pending_call_block (6 samples, 6.38%)</title><rect x="45.7447%" y="101" width="6.3830%" height="15" fill="rgb(220,129,5)" fg:x="43" fg:w="6"/><text x="45.9947%" y="111.50">dbus_pen..</text></g><g><title>[libdbus-1.so.3.32.4] (6 samples, 6.38%)</title><rect x="45.7447%" y="85" width="6.3830%" height="15" fill="rgb(242,17,10)" fg:x="43" fg:w="6"/><text x="45.9947%" y="95.50">[libdbus..</text></g><g><title>[libdbus-1.so.3.32.4] (6 samples, 6.38%)</title><rect x="45.7447%" y="69" width="6.3830%" height="15" fill="rgb(242,107,0)" fg:x="43" fg:w="6"/><text x="45.9947%" y="79.50">[libdbus..</text></g><g><title>__poll (4 samples, 4.26%)</title><rect x="47.8723%" y="53" width="4.2553%" height="15" fill="rgb(251,28,31)" fg:x="45" fg:w="4"/><text x="48.1223%" y="63.50">__poll</text></g><g><title>__GI___pthread_disable_asynccancel (3 samples, 3.19%)</title><rect x="48.9362%" y="37" width="3.1915%" height="15" fill="rgb(233,223,10)" fg:x="46" fg:w="3"/><text x="49.1862%" y="47.50">__G..</text></g><g><title>[libgtk-3.so.0.2409.32] (1 samples, 1.06%)</title><rect x="52.1277%" y="117" width="1.0638%" height="15" fill="rgb(215,21,27)" fg:x="49" fg:w="1"/><text x="52.3777%" y="127.50"></text></g><g><title>g_slice_alloc0 (1 samples, 1.06%)</title><rect x="52.1277%" y="101" width="1.0638%" height="15" fill="rgb(232,23,21)" fg:x="49" fg:w="1"/><text x="52.3777%" y="111.50"></text></g><g><title>g_slice_alloc (1 samples, 1.06%)</title><rect x="52.1277%" y="85" width="1.0638%" height="15" fill="rgb(244,5,23)" fg:x="49" fg:w="1"/><text x="52.3777%" y="95.50"></text></g><g><title>g_malloc (1 samples, 1.06%)</title><rect x="52.1277%" y="69" width="1.0638%" height="15" fill="rgb(226,81,46)" fg:x="49" fg:w="1"/><text x="52.3777%" y="79.50"></text></g><g><title>malloc (1 samples, 1.06%)</title><rect x="52.1277%" y="53" width="1.0638%" height="15" fill="rgb(247,70,30)" fg:x="49" fg:w="1"/><text x="52.3777%" y="63.50"></text></g><g><title>g_ascii_strncasecmp@plt (1 samples, 1.06%)</title><rect x="53.1915%" y="117" width="1.0638%" height="15" fill="rgb(212,68,19)" fg:x="50" fg:w="1"/><text x="53.4415%" y="127.50"></text></g><g><title>g_slice_alloc0 (1 samples, 1.06%)</title><rect x="54.2553%" y="117" width="1.0638%" height="15" fill="rgb(240,187,13)" fg:x="51" fg:w="1"/><text x="54.5053%" y="127.50"></text></g><g><title>g_slice_alloc (1 samples, 1.06%)</title><rect x="54.2553%" y="101" width="1.0638%" height="15" fill="rgb(223,113,26)" fg:x="51" fg:w="1"/><text x="54.5053%" y="111.50"></text></g><g><title>g_malloc (1 samples, 1.06%)</title><rect x="54.2553%" y="85" width="1.0638%" height="15" fill="rgb(206,192,2)" fg:x="51" fg:w="1"/><text x="54.5053%" y="95.50"></text></g><g><title>malloc (1 samples, 1.06%)</title><rect x="54.2553%" y="69" width="1.0638%" height="15" fill="rgb(241,108,4)" fg:x="51" fg:w="1"/><text x="54.5053%" y="79.50"></text></g><g><title>_int_malloc (1 samples, 1.06%)</title><rect x="54.2553%" y="53" width="1.0638%" height="15" fill="rgb(247,173,49)" fg:x="51" fg:w="1"/><text x="54.5053%" y="63.50"></text></g><g><title>[libgtk-3.so.0.2409.32] (4 samples, 4.26%)</title><rect x="52.1277%" y="133" width="4.2553%" height="15" fill="rgb(224,114,35)" fg:x="49" fg:w="4"/><text x="52.3777%" y="143.50">[libg..</text></g><g><title>g_slice_free1 (1 samples, 1.06%)</title><rect x="55.3191%" y="117" width="1.0638%" height="15" fill="rgb(245,159,27)" fg:x="52" fg:w="1"/><text x="55.5691%" y="127.50"></text></g><g><title>[libgtk-3.so.0.2409.32] (5 samples, 5.32%)</title><rect x="52.1277%" y="229" width="5.3191%" height="15" fill="rgb(245,172,44)" fg:x="49" fg:w="5"/><text x="52.3777%" y="239.50">[libgtk..</text></g><g><title>[libgtk-3.so.0.2409.32] (5 samples, 5.32%)</title><rect x="52.1277%" y="213" width="5.3191%" height="15" fill="rgb(236,23,11)" fg:x="49" fg:w="5"/><text x="52.3777%" y="223.50">[libgtk..</text></g><g><title>gtk_css_provider_load_from_resource (5 samples, 5.32%)</title><rect x="52.1277%" y="197" width="5.3191%" height="15" fill="rgb(205,117,38)" fg:x="49" fg:w="5"/><text x="52.3777%" y="207.50">gtk_css..</text></g><g><title>gtk_css_provider_load_from_file (5 samples, 5.32%)</title><rect x="52.1277%" y="181" width="5.3191%" height="15" fill="rgb(237,72,25)" fg:x="49" fg:w="5"/><text x="52.3777%" y="191.50">gtk_css..</text></g><g><title>[libgtk-3.so.0.2409.32] (5 samples, 5.32%)</title><rect x="52.1277%" y="165" width="5.3191%" height="15" fill="rgb(244,70,9)" fg:x="49" fg:w="5"/><text x="52.3777%" y="175.50">[libgtk..</text></g><g><title>[libgtk-3.so.0.2409.32] (5 samples, 5.32%)</title><rect x="52.1277%" y="149" width="5.3191%" height="15" fill="rgb(217,125,39)" fg:x="49" fg:w="5"/><text x="52.3777%" y="159.50">[libgtk..</text></g><g><title>g_intern_string (1 samples, 1.06%)</title><rect x="56.3830%" y="133" width="1.0638%" height="15" fill="rgb(235,36,10)" fg:x="53" fg:w="1"/><text x="56.6330%" y="143.50"></text></g><g><title>g_hash_table_lookup (1 samples, 1.06%)</title><rect x="56.3830%" y="117" width="1.0638%" height="15" fill="rgb(251,123,47)" fg:x="53" fg:w="1"/><text x="56.6330%" y="127.50"></text></g><g><title>gtk_init_check (20 samples, 21.28%)</title><rect x="37.2340%" y="405" width="21.2766%" height="15" fill="rgb(221,13,13)" fg:x="35" fg:w="20"/><text x="37.4840%" y="415.50">gtk_init_check</text></g><g><title>gdk_display_manager_open_display (20 samples, 21.28%)</title><rect x="37.2340%" y="389" width="21.2766%" height="15" fill="rgb(238,131,9)" fg:x="35" fg:w="20"/><text x="37.4840%" y="399.50">gdk_display_manager_open_display</text></g><g><title>[libgdk-3.so.0.2409.32] (20 samples, 21.28%)</title><rect x="37.2340%" y="373" width="21.2766%" height="15" fill="rgb(211,50,8)" fg:x="35" fg:w="20"/><text x="37.4840%" y="383.50">[libgdk-3.so.0.2409.32]</text></g><g><title>g_signal_emit_by_name (12 samples, 12.77%)</title><rect x="45.7447%" y="357" width="12.7660%" height="15" fill="rgb(245,182,24)" fg:x="43" fg:w="12"/><text x="45.9947%" y="367.50">g_signal_emit_by_na..</text></g><g><title>[libgobject-2.0.so.0.8000.0] (12 samples, 12.77%)</title><rect x="45.7447%" y="341" width="12.7660%" height="15" fill="rgb(242,14,37)" fg:x="43" fg:w="12"/><text x="45.9947%" y="351.50">[libgobject-2.0.so...</text></g><g><title>g_signal_emit (6 samples, 6.38%)</title><rect x="52.1277%" y="325" width="6.3830%" height="15" fill="rgb(246,228,12)" fg:x="49" fg:w="6"/><text x="52.3777%" y="335.50">g_signal..</text></g><g><title>g_signal_emit_valist (6 samples, 6.38%)</title><rect x="52.1277%" y="309" width="6.3830%" height="15" fill="rgb(213,55,15)" fg:x="49" fg:w="6"/><text x="52.3777%" y="319.50">g_signal..</text></g><g><title>[libgobject-2.0.so.0.8000.0] (6 samples, 6.38%)</title><rect x="52.1277%" y="293" width="6.3830%" height="15" fill="rgb(209,9,3)" fg:x="49" fg:w="6"/><text x="52.3777%" y="303.50">[libgobj..</text></g><g><title>g_cclosure_marshal_VOID__OBJECTv (6 samples, 6.38%)</title><rect x="52.1277%" y="277" width="6.3830%" height="15" fill="rgb(230,59,30)" fg:x="49" fg:w="6"/><text x="52.3777%" y="287.50">g_cclosu..</text></g><g><title>[libgtk-3.so.0.2409.32] (6 samples, 6.38%)</title><rect x="52.1277%" y="261" width="6.3830%" height="15" fill="rgb(209,121,21)" fg:x="49" fg:w="6"/><text x="52.3777%" y="271.50">[libgtk-..</text></g><g><title>[libgtk-3.so.0.2409.32] (6 samples, 6.38%)</title><rect x="52.1277%" y="245" width="6.3830%" height="15" fill="rgb(220,109,13)" fg:x="49" fg:w="6"/><text x="52.3777%" y="255.50">[libgtk-..</text></g><g><title>g_object_new (1 samples, 1.06%)</title><rect x="57.4468%" y="229" width="1.0638%" height="15" fill="rgb(232,18,1)" fg:x="54" fg:w="1"/><text x="57.6968%" y="239.50"></text></g><g><title>g_object_new_valist (1 samples, 1.06%)</title><rect x="57.4468%" y="213" width="1.0638%" height="15" fill="rgb(215,41,42)" fg:x="54" fg:w="1"/><text x="57.6968%" y="223.50"></text></g><g><title>[libgobject-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="57.4468%" y="197" width="1.0638%" height="15" fill="rgb(224,123,36)" fg:x="54" fg:w="1"/><text x="57.6968%" y="207.50"></text></g><g><title>g_type_create_instance (1 samples, 1.06%)</title><rect x="57.4468%" y="181" width="1.0638%" height="15" fill="rgb(240,125,3)" fg:x="54" fg:w="1"/><text x="57.6968%" y="191.50"></text></g><g><title>[libgtk-3.so.0.2409.32] (1 samples, 1.06%)</title><rect x="57.4468%" y="165" width="1.0638%" height="15" fill="rgb(205,98,50)" fg:x="54" fg:w="1"/><text x="57.6968%" y="175.50"></text></g><g><title>[libgtk-3.so.0.2409.32] (1 samples, 1.06%)</title><rect x="57.4468%" y="149" width="1.0638%" height="15" fill="rgb(205,185,37)" fg:x="54" fg:w="1"/><text x="57.6968%" y="159.50"></text></g><g><title>[libgtk-3.so.0.2409.32] (1 samples, 1.06%)</title><rect x="57.4468%" y="133" width="1.0638%" height="15" fill="rgb(238,207,15)" fg:x="54" fg:w="1"/><text x="57.6968%" y="143.50"></text></g><g><title>g_quark_from_string (1 samples, 1.06%)</title><rect x="57.4468%" y="117" width="1.0638%" height="15" fill="rgb(213,199,42)" fg:x="54" fg:w="1"/><text x="57.6968%" y="127.50"></text></g><g><title>g_hash_table_lookup (1 samples, 1.06%)</title><rect x="57.4468%" y="101" width="1.0638%" height="15" fill="rgb(235,201,11)" fg:x="54" fg:w="1"/><text x="57.6968%" y="111.50"></text></g><g><title>g_str_hash (1 samples, 1.06%)</title><rect x="57.4468%" y="85" width="1.0638%" height="15" fill="rgb(207,46,11)" fg:x="54" fg:w="1"/><text x="57.6968%" y="95.50"></text></g><g><title>xkb_compose_table_new_from_locale (1 samples, 1.06%)</title><rect x="58.5106%" y="277" width="1.0638%" height="15" fill="rgb(241,35,35)" fg:x="55" fg:w="1"/><text x="58.7606%" y="287.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 1.06%)</title><rect x="58.5106%" y="261" width="1.0638%" height="15" fill="rgb(243,32,47)" fg:x="55" fg:w="1"/><text x="58.7606%" y="271.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 1.06%)</title><rect x="58.5106%" y="245" width="1.0638%" height="15" fill="rgb(247,202,23)" fg:x="55" fg:w="1"/><text x="58.7606%" y="255.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 1.06%)</title><rect x="58.5106%" y="229" width="1.0638%" height="15" fill="rgb(219,102,11)" fg:x="55" fg:w="1"/><text x="58.7606%" y="239.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 1.06%)</title><rect x="58.5106%" y="213" width="1.0638%" height="15" fill="rgb(243,110,44)" fg:x="55" fg:w="1"/><text x="58.7606%" y="223.50"></text></g><g><title>sdl2::sdl::Sdl::video (35 samples, 37.23%)</title><rect x="23.4043%" y="533" width="37.2340%" height="15" fill="rgb(222,74,54)" fg:x="22" fg:w="35"/><text x="23.6543%" y="543.50">sdl2::sdl::Sdl::video</text></g><g><title>sdl2::sdl::VideoSubsystem::new (35 samples, 37.23%)</title><rect x="23.4043%" y="517" width="37.2340%" height="15" fill="rgb(216,99,12)" fg:x="22" fg:w="35"/><text x="23.6543%" y="527.50">sdl2::sdl::VideoSubsystem::new</text></g><g><title>[libSDL2-2.0.so.0.3000.1] (35 samples, 37.23%)</title><rect x="23.4043%" y="501" width="37.2340%" height="15" fill="rgb(226,22,26)" fg:x="22" fg:w="35"/><text x="23.6543%" y="511.50">[libSDL2-2.0.so.0.3000.1]</text></g><g><title>[libSDL2-2.0.so.0.3000.1] (35 samples, 37.23%)</title><rect x="23.4043%" y="485" width="37.2340%" height="15" fill="rgb(217,163,10)" fg:x="22" fg:w="35"/><text x="23.6543%" y="495.50">[libSDL2-2.0.so.0.3000.1]</text></g><g><title>[libSDL2-2.0.so.0.3000.1] (35 samples, 37.23%)</title><rect x="23.4043%" y="469" width="37.2340%" height="15" fill="rgb(213,25,53)" fg:x="22" fg:w="35"/><text x="23.6543%" y="479.50">[libSDL2-2.0.so.0.3000.1]</text></g><g><title>[libSDL2-2.0.so.0.3000.1] (35 samples, 37.23%)</title><rect x="23.4043%" y="453" width="37.2340%" height="15" fill="rgb(252,105,26)" fg:x="22" fg:w="35"/><text x="23.6543%" y="463.50">[libSDL2-2.0.so.0.3000.1]</text></g><g><title>libdecor_new (34 samples, 36.17%)</title><rect x="24.4681%" y="437" width="36.1702%" height="15" fill="rgb(220,39,43)" fg:x="23" fg:w="34"/><text x="24.7181%" y="447.50">libdecor_new</text></g><g><title>[libdecor-gtk.so] (34 samples, 36.17%)</title><rect x="24.4681%" y="421" width="36.1702%" height="15" fill="rgb(229,68,48)" fg:x="23" fg:w="34"/><text x="24.7181%" y="431.50">[libdecor-gtk.so]</text></g><g><title>wl_display_roundtrip_queue (2 samples, 2.13%)</title><rect x="58.5106%" y="405" width="2.1277%" height="15" fill="rgb(252,8,32)" fg:x="55" fg:w="2"/><text x="58.7606%" y="415.50">w..</text></g><g><title>wl_display_dispatch_queue_pending (2 samples, 2.13%)</title><rect x="58.5106%" y="389" width="2.1277%" height="15" fill="rgb(223,20,43)" fg:x="55" fg:w="2"/><text x="58.7606%" y="399.50">w..</text></g><g><title>[libwayland-client.so.0.22.0] (2 samples, 2.13%)</title><rect x="58.5106%" y="373" width="2.1277%" height="15" fill="rgb(229,81,49)" fg:x="55" fg:w="2"/><text x="58.7606%" y="383.50">[..</text></g><g><title>[libwayland-client.so.0.22.0] (2 samples, 2.13%)</title><rect x="58.5106%" y="357" width="2.1277%" height="15" fill="rgb(236,28,36)" fg:x="55" fg:w="2"/><text x="58.7606%" y="367.50">[..</text></g><g><title>ffi_call (2 samples, 2.13%)</title><rect x="58.5106%" y="341" width="2.1277%" height="15" fill="rgb(249,185,26)" fg:x="55" fg:w="2"/><text x="58.7606%" y="351.50">f..</text></g><g><title>[libffi.so.8.1.4] (2 samples, 2.13%)</title><rect x="58.5106%" y="325" width="2.1277%" height="15" fill="rgb(249,174,33)" fg:x="55" fg:w="2"/><text x="58.7606%" y="335.50">[..</text></g><g><title>[libffi.so.8.1.4] (2 samples, 2.13%)</title><rect x="58.5106%" y="309" width="2.1277%" height="15" fill="rgb(233,201,37)" fg:x="55" fg:w="2"/><text x="58.7606%" y="319.50">[..</text></g><g><title>[libSDL2-2.0.so.0.3000.1] (2 samples, 2.13%)</title><rect x="58.5106%" y="293" width="2.1277%" height="15" fill="rgb(221,78,26)" fg:x="55" fg:w="2"/><text x="58.7606%" y="303.50">[..</text></g><g><title>xkb_keymap_new_from_buffer (1 samples, 1.06%)</title><rect x="59.5745%" y="277" width="1.0638%" height="15" fill="rgb(250,127,30)" fg:x="56" fg:w="1"/><text x="59.8245%" y="287.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 1.06%)</title><rect x="59.5745%" y="261" width="1.0638%" height="15" fill="rgb(230,49,44)" fg:x="56" fg:w="1"/><text x="59.8245%" y="271.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 1.06%)</title><rect x="59.5745%" y="245" width="1.0638%" height="15" fill="rgb(229,67,23)" fg:x="56" fg:w="1"/><text x="59.8245%" y="255.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 1.06%)</title><rect x="59.5745%" y="229" width="1.0638%" height="15" fill="rgb(249,83,47)" fg:x="56" fg:w="1"/><text x="59.8245%" y="239.50"></text></g><g><title>[libxkbcommon.so.0.0.0] (1 samples, 1.06%)</title><rect x="59.5745%" y="213" width="1.0638%" height="15" fill="rgb(215,43,3)" fg:x="56" fg:w="1"/><text x="59.8245%" y="223.50"></text></g><g><title>__strncmp_avx2 (1 samples, 1.06%)</title><rect x="59.5745%" y="197" width="1.0638%" height="15" fill="rgb(238,154,13)" fg:x="56" fg:w="1"/><text x="59.8245%" y="207.50"></text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="60.6383%" y="181" width="3.1915%" height="15" fill="rgb(219,56,2)" fg:x="57" fg:w="3"/><text x="60.8883%" y="191.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="60.6383%" y="165" width="3.1915%" height="15" fill="rgb(233,0,4)" fg:x="57" fg:w="3"/><text x="60.8883%" y="175.50">[li..</text></g><g><title>__libc_fork (3 samples, 3.19%)</title><rect x="60.6383%" y="149" width="3.1915%" height="15" fill="rgb(235,30,7)" fg:x="57" fg:w="3"/><text x="60.8883%" y="159.50">__l..</text></g><g><title>_Fork (3 samples, 3.19%)</title><rect x="60.6383%" y="133" width="3.1915%" height="15" fill="rgb(250,79,13)" fg:x="57" fg:w="3"/><text x="60.8883%" y="143.50">_Fo..</text></g><g><title>[unknown] (1 samples, 1.06%)</title><rect x="62.7660%" y="117" width="1.0638%" height="15" fill="rgb(211,146,34)" fg:x="59" fg:w="1"/><text x="63.0160%" y="127.50"></text></g><g><title>[libEGL.so.1.1.0] (7 samples, 7.45%)</title><rect x="60.6383%" y="453" width="7.4468%" height="15" fill="rgb(228,22,38)" fg:x="57" fg:w="7"/><text x="60.8883%" y="463.50">[libEGL.so..</text></g><g><title>[libEGL_nvidia.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="437" width="7.4468%" height="15" fill="rgb(235,168,5)" fg:x="57" fg:w="7"/><text x="60.8883%" y="447.50">[libEGL_nv..</text></g><g><title>[libEGL_nvidia.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="421" width="7.4468%" height="15" fill="rgb(221,155,16)" fg:x="57" fg:w="7"/><text x="60.8883%" y="431.50">[libEGL_nv..</text></g><g><title>[libnvidia-egl-wayland.so.1.1.13] (7 samples, 7.45%)</title><rect x="60.6383%" y="405" width="7.4468%" height="15" fill="rgb(215,215,53)" fg:x="57" fg:w="7"/><text x="60.8883%" y="415.50">[libnvidia..</text></g><g><title>[libEGL_nvidia.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="389" width="7.4468%" height="15" fill="rgb(223,4,10)" fg:x="57" fg:w="7"/><text x="60.8883%" y="399.50">[libEGL_nv..</text></g><g><title>[libEGL_nvidia.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="373" width="7.4468%" height="15" fill="rgb(234,103,6)" fg:x="57" fg:w="7"/><text x="60.8883%" y="383.50">[libEGL_nv..</text></g><g><title>[libEGL_nvidia.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="357" width="7.4468%" height="15" fill="rgb(227,97,0)" fg:x="57" fg:w="7"/><text x="60.8883%" y="367.50">[libEGL_nv..</text></g><g><title>pthread_once@GLIBC_2.2.5 (7 samples, 7.45%)</title><rect x="60.6383%" y="341" width="7.4468%" height="15" fill="rgb(234,150,53)" fg:x="57" fg:w="7"/><text x="60.8883%" y="351.50">pthread_on..</text></g><g><title>__pthread_once_slow.isra.0 (7 samples, 7.45%)</title><rect x="60.6383%" y="325" width="7.4468%" height="15" fill="rgb(228,201,54)" fg:x="57" fg:w="7"/><text x="60.8883%" y="335.50">__pthread_..</text></g><g><title>[libEGL_nvidia.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="309" width="7.4468%" height="15" fill="rgb(222,22,37)" fg:x="57" fg:w="7"/><text x="60.8883%" y="319.50">[libEGL_nv..</text></g><g><title>[libnvidia-glsi.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="293" width="7.4468%" height="15" fill="rgb(237,53,32)" fg:x="57" fg:w="7"/><text x="60.8883%" y="303.50">[libnvidia..</text></g><g><title>[libnvidia-glsi.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="277" width="7.4468%" height="15" fill="rgb(233,25,53)" fg:x="57" fg:w="7"/><text x="60.8883%" y="287.50">[libnvidia..</text></g><g><title>[libnvidia-glsi.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="261" width="7.4468%" height="15" fill="rgb(210,40,34)" fg:x="57" fg:w="7"/><text x="60.8883%" y="271.50">[libnvidia..</text></g><g><title>[libnvidia-glsi.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="245" width="7.4468%" height="15" fill="rgb(241,220,44)" fg:x="57" fg:w="7"/><text x="60.8883%" y="255.50">[libnvidia..</text></g><g><title>[libnvidia-glsi.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="229" width="7.4468%" height="15" fill="rgb(235,28,35)" fg:x="57" fg:w="7"/><text x="60.8883%" y="239.50">[libnvidia..</text></g><g><title>[libnvidia-glsi.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="213" width="7.4468%" height="15" fill="rgb(210,56,17)" fg:x="57" fg:w="7"/><text x="60.8883%" y="223.50">[libnvidia..</text></g><g><title>[libnvidia-glsi.so.550.76] (7 samples, 7.45%)</title><rect x="60.6383%" y="197" width="7.4468%" height="15" fill="rgb(224,130,29)" fg:x="57" fg:w="7"/><text x="60.8883%" y="207.50">[libnvidia..</text></g><g><title>__libc_fork (4 samples, 4.26%)</title><rect x="63.8298%" y="181" width="4.2553%" height="15" fill="rgb(235,212,8)" fg:x="60" fg:w="4"/><text x="64.0798%" y="191.50">__lib..</text></g><g><title>_Fork (3 samples, 3.19%)</title><rect x="64.8936%" y="165" width="3.1915%" height="15" fill="rgb(223,33,50)" fg:x="61" fg:w="3"/><text x="65.1436%" y="175.50">_Fo..</text></g><g><title>[unknown] (1 samples, 1.06%)</title><rect x="67.0213%" y="149" width="1.0638%" height="15" fill="rgb(219,149,13)" fg:x="63" fg:w="1"/><text x="67.2713%" y="159.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (45 samples, 47.87%)</title><rect x="23.4043%" y="805" width="47.8723%" height="15" fill="rgb(250,156,29)" fg:x="22" fg:w="45"/><text x="23.6543%" y="815.50">__libc_start_main@@GLIBC_2.34</text></g><g><title>__libc_start_call_main (45 samples, 47.87%)</title><rect x="23.4043%" y="789" width="47.8723%" height="15" fill="rgb(216,193,19)" fg:x="22" fg:w="45"/><text x="23.6543%" y="799.50">__libc_start_call_main</text></g><g><title>main (45 samples, 47.87%)</title><rect x="23.4043%" y="773" width="47.8723%" height="15" fill="rgb(216,135,14)" fg:x="22" fg:w="45"/><text x="23.6543%" y="783.50">main</text></g><g><title>std::rt::lang_start (45 samples, 47.87%)</title><rect x="23.4043%" y="757" width="47.8723%" height="15" fill="rgb(241,47,5)" fg:x="22" fg:w="45"/><text x="23.6543%" y="767.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (45 samples, 47.87%)</title><rect x="23.4043%" y="741" width="47.8723%" height="15" fill="rgb(233,42,35)" fg:x="22" fg:w="45"/><text x="23.6543%" y="751.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (45 samples, 47.87%)</title><rect x="23.4043%" y="725" width="47.8723%" height="15" fill="rgb(231,13,6)" fg:x="22" fg:w="45"/><text x="23.6543%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (45 samples, 47.87%)</title><rect x="23.4043%" y="709" width="47.8723%" height="15" fill="rgb(207,181,40)" fg:x="22" fg:w="45"/><text x="23.6543%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (45 samples, 47.87%)</title><rect x="23.4043%" y="693" width="47.8723%" height="15" fill="rgb(254,173,49)" fg:x="22" fg:w="45"/><text x="23.6543%" y="703.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (45 samples, 47.87%)</title><rect x="23.4043%" y="677" width="47.8723%" height="15" fill="rgb(221,1,38)" fg:x="22" fg:w="45"/><text x="23.6543%" y="687.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (45 samples, 47.87%)</title><rect x="23.4043%" y="661" width="47.8723%" height="15" fill="rgb(206,124,46)" fg:x="22" fg:w="45"/><text x="23.6543%" y="671.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (45 samples, 47.87%)</title><rect x="23.4043%" y="645" width="47.8723%" height="15" fill="rgb(249,21,11)" fg:x="22" fg:w="45"/><text x="23.6543%" y="655.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (45 samples, 47.87%)</title><rect x="23.4043%" y="629" width="47.8723%" height="15" fill="rgb(222,201,40)" fg:x="22" fg:w="45"/><text x="23.6543%" y="639.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (45 samples, 47.87%)</title><rect x="23.4043%" y="613" width="47.8723%" height="15" fill="rgb(235,61,29)" fg:x="22" fg:w="45"/><text x="23.6543%" y="623.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_..</text></g><g><title>std::rt::lang_start::_{{closure}} (45 samples, 47.87%)</title><rect x="23.4043%" y="597" width="47.8723%" height="15" fill="rgb(219,207,3)" fg:x="22" fg:w="45"/><text x="23.6543%" y="607.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (45 samples, 47.87%)</title><rect x="23.4043%" y="581" width="47.8723%" height="15" fill="rgb(222,56,46)" fg:x="22" fg:w="45"/><text x="23.6543%" y="591.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (45 samples, 47.87%)</title><rect x="23.4043%" y="565" width="47.8723%" height="15" fill="rgb(239,76,54)" fg:x="22" fg:w="45"/><text x="23.6543%" y="575.50">core::ops::function::FnOnce::call_once</text></g><g><title>embryo::main (45 samples, 47.87%)</title><rect x="23.4043%" y="549" width="47.8723%" height="15" fill="rgb(231,124,27)" fg:x="22" fg:w="45"/><text x="23.6543%" y="559.50">embryo::main</text></g><g><title>sdl2::video::WindowBuilder::build (10 samples, 10.64%)</title><rect x="60.6383%" y="533" width="10.6383%" height="15" fill="rgb(249,195,6)" fg:x="57" fg:w="10"/><text x="60.8883%" y="543.50">sdl2::video::Win..</text></g><g><title>[libSDL2-2.0.so.0.3000.1] (10 samples, 10.64%)</title><rect x="60.6383%" y="517" width="10.6383%" height="15" fill="rgb(237,174,47)" fg:x="57" fg:w="10"/><text x="60.8883%" y="527.50">[libSDL2-2.0.so...</text></g><g><title>[libSDL2-2.0.so.0.3000.1] (10 samples, 10.64%)</title><rect x="60.6383%" y="501" width="10.6383%" height="15" fill="rgb(206,201,31)" fg:x="57" fg:w="10"/><text x="60.8883%" y="511.50">[libSDL2-2.0.so...</text></g><g><title>[libSDL2-2.0.so.0.3000.1] (10 samples, 10.64%)</title><rect x="60.6383%" y="485" width="10.6383%" height="15" fill="rgb(231,57,52)" fg:x="57" fg:w="10"/><text x="60.8883%" y="495.50">[libSDL2-2.0.so...</text></g><g><title>[libSDL2-2.0.so.0.3000.1] (10 samples, 10.64%)</title><rect x="60.6383%" y="469" width="10.6383%" height="15" fill="rgb(248,177,22)" fg:x="57" fg:w="10"/><text x="60.8883%" y="479.50">[libSDL2-2.0.so...</text></g><g><title>[libEGL_nvidia.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="453" width="3.1915%" height="15" fill="rgb(215,211,37)" fg:x="64" fg:w="3"/><text x="68.3351%" y="463.50">[li..</text></g><g><title>[libEGL_nvidia.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="437" width="3.1915%" height="15" fill="rgb(241,128,51)" fg:x="64" fg:w="3"/><text x="68.3351%" y="447.50">[li..</text></g><g><title>[libnvidia-egl-wayland.so.1.1.13] (3 samples, 3.19%)</title><rect x="68.0851%" y="421" width="3.1915%" height="15" fill="rgb(227,165,31)" fg:x="64" fg:w="3"/><text x="68.3351%" y="431.50">[li..</text></g><g><title>[libEGL_nvidia.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="405" width="3.1915%" height="15" fill="rgb(228,167,24)" fg:x="64" fg:w="3"/><text x="68.3351%" y="415.50">[li..</text></g><g><title>[libEGL_nvidia.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="389" width="3.1915%" height="15" fill="rgb(228,143,12)" fg:x="64" fg:w="3"/><text x="68.3351%" y="399.50">[li..</text></g><g><title>[libEGL_nvidia.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="373" width="3.1915%" height="15" fill="rgb(249,149,8)" fg:x="64" fg:w="3"/><text x="68.3351%" y="383.50">[li..</text></g><g><title>[libEGL_nvidia.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="357" width="3.1915%" height="15" fill="rgb(243,35,44)" fg:x="64" fg:w="3"/><text x="68.3351%" y="367.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="341" width="3.1915%" height="15" fill="rgb(246,89,9)" fg:x="64" fg:w="3"/><text x="68.3351%" y="351.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="325" width="3.1915%" height="15" fill="rgb(233,213,13)" fg:x="64" fg:w="3"/><text x="68.3351%" y="335.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="309" width="3.1915%" height="15" fill="rgb(233,141,41)" fg:x="64" fg:w="3"/><text x="68.3351%" y="319.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="293" width="3.1915%" height="15" fill="rgb(239,167,4)" fg:x="64" fg:w="3"/><text x="68.3351%" y="303.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="277" width="3.1915%" height="15" fill="rgb(209,217,16)" fg:x="64" fg:w="3"/><text x="68.3351%" y="287.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="261" width="3.1915%" height="15" fill="rgb(219,88,35)" fg:x="64" fg:w="3"/><text x="68.3351%" y="271.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="245" width="3.1915%" height="15" fill="rgb(220,193,23)" fg:x="64" fg:w="3"/><text x="68.3351%" y="255.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="229" width="3.1915%" height="15" fill="rgb(230,90,52)" fg:x="64" fg:w="3"/><text x="68.3351%" y="239.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="213" width="3.1915%" height="15" fill="rgb(252,106,19)" fg:x="64" fg:w="3"/><text x="68.3351%" y="223.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="197" width="3.1915%" height="15" fill="rgb(206,74,20)" fg:x="64" fg:w="3"/><text x="68.3351%" y="207.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="181" width="3.1915%" height="15" fill="rgb(230,138,44)" fg:x="64" fg:w="3"/><text x="68.3351%" y="191.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="165" width="3.1915%" height="15" fill="rgb(235,182,43)" fg:x="64" fg:w="3"/><text x="68.3351%" y="175.50">[li..</text></g><g><title>[libnvidia-glsi.so.550.76] (3 samples, 3.19%)</title><rect x="68.0851%" y="149" width="3.1915%" height="15" fill="rgb(242,16,51)" fg:x="64" fg:w="3"/><text x="68.3351%" y="159.50">[li..</text></g><g><title>__libc_fork (3 samples, 3.19%)</title><rect x="68.0851%" y="133" width="3.1915%" height="15" fill="rgb(248,9,4)" fg:x="64" fg:w="3"/><text x="68.3351%" y="143.50">__l..</text></g><g><title>_Fork (3 samples, 3.19%)</title><rect x="68.0851%" y="117" width="3.1915%" height="15" fill="rgb(210,31,22)" fg:x="64" fg:w="3"/><text x="68.3351%" y="127.50">_Fo..</text></g><g><title>[unknown] (1 samples, 1.06%)</title><rect x="70.2128%" y="101" width="1.0638%" height="15" fill="rgb(239,54,39)" fg:x="66" fg:w="1"/><text x="70.4628%" y="111.50"></text></g><g><title>dl_main (1 samples, 1.06%)</title><rect x="72.3404%" y="757" width="1.0638%" height="15" fill="rgb(230,99,41)" fg:x="68" fg:w="1"/><text x="72.5904%" y="767.50"></text></g><g><title>_dl_relocate_object (1 samples, 1.06%)</title><rect x="72.3404%" y="741" width="1.0638%" height="15" fill="rgb(253,106,12)" fg:x="68" fg:w="1"/><text x="72.5904%" y="751.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 1.06%)</title><rect x="72.3404%" y="725" width="1.0638%" height="15" fill="rgb(213,46,41)" fg:x="68" fg:w="1"/><text x="72.5904%" y="735.50"></text></g><g><title>do_lookup_x (1 samples, 1.06%)</title><rect x="72.3404%" y="709" width="1.0638%" height="15" fill="rgb(215,133,35)" fg:x="68" fg:w="1"/><text x="72.5904%" y="719.50"></text></g><g><title>_dl_start_final (2 samples, 2.13%)</title><rect x="72.3404%" y="789" width="2.1277%" height="15" fill="rgb(213,28,5)" fg:x="68" fg:w="2"/><text x="72.5904%" y="799.50">_..</text></g><g><title>_dl_sysdep_start (2 samples, 2.13%)</title><rect x="72.3404%" y="773" width="2.1277%" height="15" fill="rgb(215,77,49)" fg:x="68" fg:w="2"/><text x="72.5904%" y="783.50">_..</text></g><g><title>init_cpu_features.constprop.0 (1 samples, 1.06%)</title><rect x="73.4043%" y="757" width="1.0638%" height="15" fill="rgb(248,100,22)" fg:x="69" fg:w="1"/><text x="73.6543%" y="767.50"></text></g><g><title>handle_intel.constprop.0 (1 samples, 1.06%)</title><rect x="73.4043%" y="741" width="1.0638%" height="15" fill="rgb(208,67,9)" fg:x="69" fg:w="1"/><text x="73.6543%" y="751.50"></text></g><g><title>intel_check_word.constprop.0 (1 samples, 1.06%)</title><rect x="73.4043%" y="725" width="1.0638%" height="15" fill="rgb(219,133,21)" fg:x="69" fg:w="1"/><text x="73.6543%" y="735.50"></text></g><g><title>_start (50 samples, 53.19%)</title><rect x="22.3404%" y="821" width="53.1915%" height="15" fill="rgb(246,46,29)" fg:x="21" fg:w="50"/><text x="22.5904%" y="831.50">_start</text></g><g><title>_dl_start (4 samples, 4.26%)</title><rect x="71.2766%" y="805" width="4.2553%" height="15" fill="rgb(246,185,52)" fg:x="67" fg:w="4"/><text x="71.5266%" y="815.50">_dl_s..</text></g><g><title>rtld_timer_start (1 samples, 1.06%)</title><rect x="74.4681%" y="789" width="1.0638%" height="15" fill="rgb(252,136,11)" fg:x="70" fg:w="1"/><text x="74.7181%" y="799.50"></text></g><g><title>[libglib-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="87.2340%" y="789" width="1.0638%" height="15" fill="rgb(219,138,53)" fg:x="82" fg:w="1"/><text x="87.4840%" y="799.50"></text></g><g><title>g_private_set (1 samples, 1.06%)</title><rect x="87.2340%" y="773" width="1.0638%" height="15" fill="rgb(211,51,23)" fg:x="82" fg:w="1"/><text x="87.4840%" y="783.50"></text></g><g><title>__ctype_init (2 samples, 2.13%)</title><rect x="88.2979%" y="789" width="2.1277%" height="15" fill="rgb(247,221,28)" fg:x="83" fg:w="2"/><text x="88.5479%" y="799.50">_..</text></g><g><title>clone3 (16 samples, 17.02%)</title><rect x="75.5319%" y="821" width="17.0213%" height="15" fill="rgb(251,222,45)" fg:x="71" fg:w="16"/><text x="75.7819%" y="831.50">clone3</text></g><g><title>start_thread (11 samples, 11.70%)</title><rect x="80.8511%" y="805" width="11.7021%" height="15" fill="rgb(217,162,53)" fg:x="76" fg:w="11"/><text x="81.1011%" y="815.50">start_thread</text></g><g><title>name_stack_maps (2 samples, 2.13%)</title><rect x="90.4255%" y="789" width="2.1277%" height="15" fill="rgb(229,93,14)" fg:x="85" fg:w="2"/><text x="90.6755%" y="799.50">n..</text></g><g><title>__GI___snprintf (2 samples, 2.13%)</title><rect x="90.4255%" y="773" width="2.1277%" height="15" fill="rgb(209,67,49)" fg:x="85" fg:w="2"/><text x="90.6755%" y="783.50">_..</text></g><g><title>__vsnprintf_internal (1 samples, 1.06%)</title><rect x="91.4894%" y="757" width="1.0638%" height="15" fill="rgb(213,87,29)" fg:x="86" fg:w="1"/><text x="91.7394%" y="767.50"></text></g><g><title>__printf_buffer (1 samples, 1.06%)</title><rect x="91.4894%" y="741" width="1.0638%" height="15" fill="rgb(205,151,52)" fg:x="86" fg:w="1"/><text x="91.7394%" y="751.50"></text></g><g><title>_itoa_word (1 samples, 1.06%)</title><rect x="91.4894%" y="725" width="1.0638%" height="15" fill="rgb(253,215,39)" fg:x="86" fg:w="1"/><text x="91.7394%" y="735.50"></text></g><g><title>embryo (86 samples, 91.49%)</title><rect x="2.1277%" y="837" width="91.4894%" height="15" fill="rgb(221,220,41)" fg:x="2" fg:w="86"/><text x="2.3777%" y="847.50">embryo</text></g><g><title>syscall (1 samples, 1.06%)</title><rect x="92.5532%" y="821" width="1.0638%" height="15" fill="rgb(218,133,21)" fg:x="87" fg:w="1"/><text x="92.8032%" y="831.50"></text></g><g><title>gdbus (1 samples, 1.06%)</title><rect x="93.6170%" y="837" width="1.0638%" height="15" fill="rgb(221,193,43)" fg:x="88" fg:w="1"/><text x="93.8670%" y="847.50"></text></g><g><title>clone3 (1 samples, 1.06%)</title><rect x="93.6170%" y="821" width="1.0638%" height="15" fill="rgb(240,128,52)" fg:x="88" fg:w="1"/><text x="93.8670%" y="831.50"></text></g><g><title>start_thread (1 samples, 1.06%)</title><rect x="93.6170%" y="805" width="1.0638%" height="15" fill="rgb(253,114,12)" fg:x="88" fg:w="1"/><text x="93.8670%" y="815.50"></text></g><g><title>[libglib-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="93.6170%" y="789" width="1.0638%" height="15" fill="rgb(215,223,47)" fg:x="88" fg:w="1"/><text x="93.8670%" y="799.50"></text></g><g><title>[libgio-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="93.6170%" y="773" width="1.0638%" height="15" fill="rgb(248,225,23)" fg:x="88" fg:w="1"/><text x="93.8670%" y="783.50"></text></g><g><title>g_main_loop_run (1 samples, 1.06%)</title><rect x="93.6170%" y="757" width="1.0638%" height="15" fill="rgb(250,108,0)" fg:x="88" fg:w="1"/><text x="93.8670%" y="767.50"></text></g><g><title>[libglib-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="93.6170%" y="741" width="1.0638%" height="15" fill="rgb(228,208,7)" fg:x="88" fg:w="1"/><text x="93.8670%" y="751.50"></text></g><g><title>[libglib-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="93.6170%" y="725" width="1.0638%" height="15" fill="rgb(244,45,10)" fg:x="88" fg:w="1"/><text x="93.8670%" y="735.50"></text></g><g><title>[libglib-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="93.6170%" y="709" width="1.0638%" height="15" fill="rgb(207,125,25)" fg:x="88" fg:w="1"/><text x="93.8670%" y="719.50"></text></g><g><title>[libgio-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="93.6170%" y="693" width="1.0638%" height="15" fill="rgb(210,195,18)" fg:x="88" fg:w="1"/><text x="93.8670%" y="703.50"></text></g><g><title>[libgio-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="93.6170%" y="677" width="1.0638%" height="15" fill="rgb(249,80,12)" fg:x="88" fg:w="1"/><text x="93.8670%" y="687.50"></text></g><g><title>[libgio-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="93.6170%" y="661" width="1.0638%" height="15" fill="rgb(221,65,9)" fg:x="88" fg:w="1"/><text x="93.8670%" y="671.50"></text></g><g><title>g_task_new (1 samples, 1.06%)</title><rect x="93.6170%" y="645" width="1.0638%" height="15" fill="rgb(235,49,36)" fg:x="88" fg:w="1"/><text x="93.8670%" y="655.50"></text></g><g><title>g_object_new@plt (1 samples, 1.06%)</title><rect x="93.6170%" y="629" width="1.0638%" height="15" fill="rgb(225,32,20)" fg:x="88" fg:w="1"/><text x="93.8670%" y="639.50"></text></g><g><title>gmain (1 samples, 1.06%)</title><rect x="94.6809%" y="837" width="1.0638%" height="15" fill="rgb(215,141,46)" fg:x="89" fg:w="1"/><text x="94.9309%" y="847.50"></text></g><g><title>clone3 (1 samples, 1.06%)</title><rect x="94.6809%" y="821" width="1.0638%" height="15" fill="rgb(250,160,47)" fg:x="89" fg:w="1"/><text x="94.9309%" y="831.50"></text></g><g><title>start_thread (1 samples, 1.06%)</title><rect x="94.6809%" y="805" width="1.0638%" height="15" fill="rgb(216,222,40)" fg:x="89" fg:w="1"/><text x="94.9309%" y="815.50"></text></g><g><title>[libglib-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="94.6809%" y="789" width="1.0638%" height="15" fill="rgb(234,217,39)" fg:x="89" fg:w="1"/><text x="94.9309%" y="799.50"></text></g><g><title>[libglib-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="94.6809%" y="773" width="1.0638%" height="15" fill="rgb(207,178,40)" fg:x="89" fg:w="1"/><text x="94.9309%" y="783.50"></text></g><g><title>g_main_context_iteration (1 samples, 1.06%)</title><rect x="94.6809%" y="757" width="1.0638%" height="15" fill="rgb(221,136,13)" fg:x="89" fg:w="1"/><text x="94.9309%" y="767.50"></text></g><g><title>[libglib-2.0.so.0.8000.0] (1 samples, 1.06%)</title><rect x="94.6809%" y="741" width="1.0638%" height="15" fill="rgb(249,199,10)" fg:x="89" fg:w="1"/><text x="94.9309%" y="751.50"></text></g><g><title>[unknown] (1 samples, 1.06%)</title><rect x="95.7447%" y="821" width="1.0638%" height="15" fill="rgb(249,222,13)" fg:x="90" fg:w="1"/><text x="95.9947%" y="831.50"></text></g><g><title>all (94 samples, 100%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(244,185,38)" fg:x="0" fg:w="94"/><text x="0.2500%" y="863.50"></text></g><g><title>pool-embryo (4 samples, 4.26%)</title><rect x="95.7447%" y="837" width="4.2553%" height="15" fill="rgb(236,202,9)" fg:x="90" fg:w="4"/><text x="95.9947%" y="847.50">pool-..</text></g><g><title>clone3 (3 samples, 3.19%)</title><rect x="96.8085%" y="821" width="3.1915%" height="15" fill="rgb(250,229,37)" fg:x="91" fg:w="3"/><text x="97.0585%" y="831.50">clo..</text></g><g><title>start_thread (2 samples, 2.13%)</title><rect x="97.8723%" y="805" width="2.1277%" height="15" fill="rgb(206,174,23)" fg:x="92" fg:w="2"/><text x="98.1223%" y="815.50">s..</text></g></svg></svg>