;; -*- mode: emacs-lisp; lexical-binding:t; coding: utf-8-emacs; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Sun Apr 28 11:43:02 2024
;; Desktop file format version 208
;; Emacs version 29.3

;; Global section:
(setq desktop-saved-frameset [frameset 1 (26158 28294 499209 668000) (desktop . "208") "alexispurslane@development.ono-sendai" nil nil ((((minibuffer . t) (undecorated . t) (override-redirect) (font . "-JB-JetBrains Mono-regular-normal-normal-*-16-*-*-*-d-0-iso10646-1") (border-width . 0) (internal-border-width . 0) (child-frame-border-width) (right-divider-width . 1) (bottom-divider-width . 1) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#d4d4d4") (background-color . "#191919") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (scroll-bar-foreground) (scroll-bar-background) (menu-bar-lines . 0) (tab-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 16) (scroll-bar-height . 16) (alpha) (alpha-background) (no-focus-on-map) (no-accept-focus) (fullscreen) (visibility . t) (skip-taskbar) (z-group) (display-type . color) (background-mode . dark) (cursor-color . "#FFFFFF") (font-parameter) (environment) (sticky) (last-focus-update . t) (lsp-ui-doc-buffer . "Unprintable entity") (frameset--id . "C6C8-1D67-59D3-6D34") (frameset--mini t . t) (frameset--text-pixel-width . 1603) (frameset--text-pixel-height . 1388) (height . 63) (width . 160) (modeline . t) (unsplittable) (left . 0) (top . 0) (icon-name) (display . "wayland-0") (explicit-name)) ((min-height . 8) (min-width . 20) (min-height-ignore . 8) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 176) (min-pixel-width . 200) (min-pixel-height-ignore . 176) (min-pixel-width-ignore . 80) (min-pixel-height-safe . 44) (min-pixel-width-safe . 40)) hc (pixel-width . 1619) (pixel-height . 1366) (total-width . 162) (total-height . 62) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 810) (pixel-height . 1366) (total-width . 81) (total-height . 62) (normal-height . 1.0) (normal-width . 0.5003088326127239) (parameters (better-jumper-struct . #s(better-jumper-jump-list-struct (0 1 . [("/var/home/alexispurslane/Development/embryo-engine/src/render_thread.rs" 5473 "axm54n") nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]) -1))) (buffer "render_thread.rs" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 5428) (start . 4376)) (prev-buffers ("*doom*" 1 1543) ("*scratch*" 1 1))) (vc (last . t) (pixel-width . 809) (pixel-height . 1366) (total-width . 81) (total-height . 62) (normal-height . 1.0) (normal-width . 0.4996911673872761) (combination-limit) (leaf (pixel-width . 809) (pixel-height . 683) (total-width . 81) (total-height . 31) (normal-height . 0.5) (normal-width . 1.0) (parameters (better-jumper-struct . #s(better-jumper-jump-list-struct (0 1 . [("/var/home/alexispurslane/Development/embryo-engine/src/render_thread.rs" 5473 "axm54n") nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]) -1))) (buffer "render_thread.rs" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 5428) (start . 5008))) (leaf (last . t) (pixel-width . 809) (pixel-height . 683) (total-width . 81) (total-height . 31) (normal-height . 0.5) (normal-width . 1.0) (parameters (better-jumper-struct . #s(better-jumper-jump-list-struct (0 1 . [("/var/home/alexispurslane/Development/embryo-engine/src/render_thread.rs" 5473 "axm54n") nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil]) -1))) (buffer "render_thread.rs" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 5428) (start . 5008))))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring nil)
(setq regexp-search-ring '(#("\n" 0 1 (isearch-case-fold-search nil isearch-regexp-function nil)) #("\n\\([^\n]\\)" 0 9 (isearch-case-fold-search nil isearch-regexp-function nil)) #("{Sole Developer}" 0 1 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 1 2 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg delete) 2 3 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 3 4 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 4 6 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 6 7 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 7 10 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 10 11 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 11 12 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 12 14 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 14 15 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 15 16 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg)) #("^[[:space:]]+\\* \\(.*\\)" 0 22 (isearch-case-fold-search nil isearch-regexp-function nil)) #("null" 0 1 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 1 2 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 2 3 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 3 4 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg)) #("type: \\('[a-z]+'\\)" 0 1 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 1 2 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 2 6 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 6 8 (isearch-case-fold-search nil isearch-regexp-function nil) 8 9 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 9 10 (isearch-case-fold-search nil isearch-regexp-function nil) 10 11 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 11 13 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 13 15 (isearch-case-fold-search nil isearch-regexp-function nil) 15 16 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 16 18 (isearch-case-fold-search nil isearch-regexp-function nil)) #("?: USDAMeasurement;" 0 1 (isearch-case-fold-search nil isearch-regexp-function nil) 1 3 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 3 4 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 4 5 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 5 6 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 6 7 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 7 9 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 9 10 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 10 11 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 11 12 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 12 13 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 13 16 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 16 17 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 17 18 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 18 19 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg)) #("\\?: string" 0 2 (isearch-case-fold-search nil isearch-regexp-function nil) 2 4 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 4 5 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 5 6 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 6 7 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 7 8 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 8 9 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 9 10 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg)) #(";" 0 1 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg)) #("$scanLineWidth" 0 1 (isearch-case-fold-search nil isearch-regexp-function nil) 1 2 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 2 3 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 3 4 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 4 5 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 5 6 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 6 7 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 7 8 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 8 9 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 9 10 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 10 11 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 11 12 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 12 13 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg) 13 14 (isearch-case-fold-search nil isearch-regexp-function nil ws-butler-chg chg))))
(setq register-alist '((111) (106 . "jjjjjjjjjjjjjkk@qj") (108 . [escape]) (113) (48 . "                    self.gl.Enable(gl::STENCIL_TEST);\n")))
(setq file-name-history '(".emacs.desktop" "~/Development/embryo-engine/src/render_thread.rs" "~/Development/embryo-engine/src/systems.rs" "~/Development/embryo-engine/src/render_gl/textures.rs" "~/Development/embryo-engine/src/render_thread.rs" "~/Development/embryo-engine/data/shaders/light.frag" "~/dotfiles/emacs/.doom.d/init.el" "~/Development/CodingChallenge/challenge.py" "~/dotfiles/emacs/.doom.d/init.el" "~/Development/CodingChallenge/challenge.py" "~/dotfiles/emacs/.doom.d/init.el" "~/dotfiles/emacs/.doom.d/config.el" "~/Development/CodingChallenge/challenge.py" "~/Documents/Awesome-CV/cv/skills.tex" "~/Documents/Awesome-CV/resume.tex" "~/Documents/Awesome-CV/awesome-cv.cls" "~/Documents/Awesome-CV/resume.tex" "~/Documents/Awesome-CV/" "~/Sync/Private/Resume/resume.tex" "~/Sync/Private/resume.tex" "~/Development/BeyondCertified/Products/" "~/Development/BeyondCertified/" "~/Documents/blog/content/blog/_index.md" "~/Documents/blog/content/blog/" "~/Documents/blog/templates/blog.html" "~/Documents/blog/content/bio.md" "~/Documents/blog/templates/blog-page.html" "~/Documents/blog/templates/index.html" "~/Documents/blog/templates/blog-page.html" "~/Documents/blog/static/styles.css" "~/Documents/blog/templates/base.html" "~/Documents/blog/templates/index.html" "~/Documents/blog/templates/" "~/dotfiles/emacs/.doom.d/config.el" "~/Documents/blog/templates/blog.html" "~/Documents/blog/templates/index.html" "~/Documents/blog/templates/blog-page.html" "~/Documents/blog/templates/blog.html" "~/Documents/blog/content/blog/_index.md" "~/Documents/blog/templates/index.html" "~/Documents/blog/oldblog/bio.md" "~/Documents/blog/templates/base.html" "~/dotfiles/emacs/.doom.d/config.el" "~/dotfiles/emacs/.doom.d/init.el" "~/Documents/blog/"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/var/home/alexispurslane/Development/embryo-engine/src/render_thread.rs"
  "render_thread.rs"
  'rustic-mode
  '(hl-line-mode company-mode lsp-completion-mode flycheck-mode lsp-diagnostics-mode lsp-headerline-breadcrumb-mode lsp-modeline-code-actions-mode lsp-modeline-diagnostics-mode lsp-modeline-workspace-status-mode lsp-lens-mode yas-minor-mode eldoc-mode lsp-managed-mode lsp-ui-doc-mode lsp-ui-sideline-mode lsp-ui-mode lsp-mode git-gutter-mode font-lock-mode whitespace-mode evil-local-mode ligature-mode flycheck-popup-tip-mode undo-fu-session-mode emojify-mode ws-butler-mode smartparens-mode evil-snipe-local-mode evil-snipe-override-local-mode better-jumper-local-mode apheleia-mode evil-surround-mode rainbow-delimiters-mode vi-tilde-fringe-mode highlight-numbers-mode display-line-numbers-mode hl-todo-mode dtrt-indent-mode)
  5428
  '(5428 nil)
  nil
  nil
  '((indicate-empty-lines . t) (tab-width . 4) (buffer-display-time 26158 28290 157578 987000) (buffer-file-coding-system . undecided-unix) (overwrite-mode))
  '((mark-ring nil)))

